using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Diagnostics;
using System.Security.Cryptography;
using System.IO;
using System.ServiceProcess;

namespace KIT325_Malware_Detection
{
    public partial class Form1 : Form
    {
        public static Dictionary<String, String> scanned = new Dictionary<String, String> ();

        public Form1()
        {
            InitializeComponent();
        }

        static string CalculateMD5(string filename)
        {
            using (var md5 = MD5.Create())
            {
                using (var stream = File.OpenRead(filename))
                {
                    var hash = md5.ComputeHash(stream);
                    return BitConverter.ToString(hash).Replace("-", "").ToLowerInvariant();
                }
            }
        }

        private void Start_Scan_Click(object sender, EventArgs e)
        {
            string[] knownHashes = Properties.Resources.VirusShare_00000.Split(new string[] { "\r\n" }, StringSplitOptions.None);

            Console.WriteLine("________________START_____________");
            Process[] processCollection = Process.GetProcesses();
            foreach (Process p in processCollection)
            {
                try
                {
                    string filePath = p.MainModule.FileName;
                    string fileName = p.MainModule.ModuleName;
                    string hash = CalculateMD5(filePath);
                    long memUsageBytes = p.WorkingSet64;

                    Console.WriteLine(filePath);
                    if (!Scanned.Items.Contains(fileName))
                    {
                        scanned.Add(fileName, filePath);
                        Scanned.Items.Add(fileName);
                    }
                    //check hash against known hashes
                    if (knownHashes.Contains(hash))
                    {
                        Console.WriteLine("Malware!!!");
                        Console.WriteLine(filePath);
                        Malware.Items.Add(fileName);
                    }
                }
                catch (Exception exception) //I think this is only happening when it's an important windows process
                {
                    Console.WriteLine(exception.Message);
                    Console.WriteLine(p.ProcessName);
                }
            }
        }

        private void Start_Service_Click(object sender, EventArgs e)
        {
            ServiceController service = new ServiceController("325 Malware Detection");

            if ((service.Status.Equals(ServiceControllerStatus.Stopped)) || (service.Status.Equals(ServiceControllerStatus.StopPending)))
            {
                service.Start();
                Start_Service.Text = "Stop Service";
            }
            else
            {
                service.Stop();
                Start_Service.Text = "Start Service";
            }
        }

        private void Scanned_SelectedIndexChanged(object sender, EventArgs e)
        {
            textBox1.Text = scanned[Scanned.SelectedItem.ToString()];
        }

        private void Malware_SelectedIndexChanged(object sender, EventArgs e)
        {
            textBox1.Text = scanned[Malware.SelectedItem.ToString()];
        }
    }
}
